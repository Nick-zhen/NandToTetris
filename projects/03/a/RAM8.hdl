// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */

 /** 
  * This is a sequence of n addressable registers, with addresses 0 to n-1
  * At any given point of time, only one register in the RAM is selected
  */

CHIP RAM8 {
    // The reason why address has 3 bits is because 2^^3 = 8, there are 8 registers.
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load ,sel=address ,a=a ,b=b ,c=c ,d=d ,e=e ,f=f ,g=g ,h=h );
    Register(in=in ,load=a ,out=out0 );
    Register(in=in ,load=b ,out=out1 );
    Register(in=in ,load=c ,out=out2 );
    Register(in=in ,load=d ,out=out3 );
    Register(in=in ,load=e ,out=out4 );
    Register(in=in ,load=f ,out=out5 );
    Register(in=in ,load=g ,out=out6 );
    Register(in=in ,load=h ,out=out7 );
    Mux8Way16(a=out0 ,b=out1 ,c=out2 ,d=out3 ,e=out4 ,f=out5 ,g=out6 ,h=out7 ,sel=address ,out=out );
}
